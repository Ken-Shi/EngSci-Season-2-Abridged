\BOOKMARK [1][-]{section.0.1}{Introduction and Course Information}{}% 1
\BOOKMARK [0][-]{chapter.1}{Efficiency and Complexity}{}% 2
\BOOKMARK [1][-]{section.1.1}{Ideal vs. Real Computers}{chapter.1}% 3
\BOOKMARK [1][-]{section.1.2}{The RAM Model of Computation}{chapter.1}% 4
\BOOKMARK [2][-]{subsection.1.2.1}{Big Oh Notation}{section.1.2}% 5
\BOOKMARK [0][-]{chapter.2}{List ADT implementation in C}{}% 6
\BOOKMARK [1][-]{section.2.1}{Stacks and Queues}{chapter.2}% 7
\BOOKMARK [2][-]{subsection.2.1.1}{Stacks}{section.2.1}% 8
\BOOKMARK [2][-]{subsection.2.1.2}{Queues}{section.2.1}% 9
\BOOKMARK [2][-]{subsection.2.1.3}{Stack and Heap in C}{section.2.1}% 10
\BOOKMARK [0][-]{chapter.3}{Trees}{}% 11
\BOOKMARK [1][-]{section.3.1}{Types of General Traversal:}{chapter.3}% 12
\BOOKMARK [2][-]{subsection.3.1.1}{Using Stacks and Queues for Traversals}{section.3.1}% 13
\BOOKMARK [1][-]{section.3.2}{Binary Trees: }{chapter.3}% 14
\BOOKMARK [2][-]{subsection.3.2.1}{Mathai's Weird Definition for Binary Trees vs. Normal Trees}{section.3.2}% 15
\BOOKMARK [2][-]{subsection.3.2.2}{Binary Search Trees: }{section.3.2}% 16
\BOOKMARK [2][-]{subsection.3.2.3}{Advantages/Disadvantages of Binary Search Trees: }{section.3.2}% 17
\BOOKMARK [2][-]{subsection.3.2.4}{Binary Tree Traversals}{section.3.2}% 18
\BOOKMARK [1][-]{section.3.3}{Self-Balancing BST's \(AVL Trees\): }{chapter.3}% 19
\BOOKMARK [2][-]{subsection.3.3.1}{Right Rotation: }{section.3.3}% 20
\BOOKMARK [2][-]{subsection.3.3.2}{Left Rotation: }{section.3.3}% 21
\BOOKMARK [2][-]{subsection.3.3.3}{Major Right / Minor Left: }{section.3.3}% 22
\BOOKMARK [2][-]{subsection.3.3.4}{Summary of Tree Rotations: }{section.3.3}% 23
\BOOKMARK [2][-]{subsection.3.3.5}{Inserting to a Binary Tree}{section.3.3}% 24
\BOOKMARK [2][-]{subsection.3.3.6}{Deleting from a Binary Tree}{section.3.3}% 25
\BOOKMARK [1][-]{section.3.4}{AVL Tree}{chapter.3}% 26
\BOOKMARK [2][-]{subsection.3.4.1}{When to use which rotation/HOW TO BALANCE: }{section.3.4}% 27
\BOOKMARK [2][-]{subsection.3.4.2}{Adding to AVL Trees: }{section.3.4}% 28
\BOOKMARK [2][-]{subsection.3.4.3}{Deleting from AVL Trees: }{section.3.4}% 29
\BOOKMARK [1][-]{section.3.5}{Priority Queues}{chapter.3}% 30
\BOOKMARK [1][-]{section.3.6}{Hashes and Strings}{chapter.3}% 31
\BOOKMARK [1][-]{section.3.7}{Heap}{chapter.3}% 32
\BOOKMARK [2][-]{subsection.3.7.1}{Implementation as List}{section.3.7}% 33
\BOOKMARK [2][-]{subsection.3.7.2}{Adding to a Heap}{section.3.7}% 34
\BOOKMARK [2][-]{subsection.3.7.3}{Deleting from Heap}{section.3.7}% 35
\BOOKMARK [2][-]{subsection.3.7.4}{Searching a Heap}{section.3.7}% 36
\BOOKMARK [0][-]{chapter.4}{Graphs}{}% 37
\BOOKMARK [1][-]{section.4.1}{Types of Graphs}{chapter.4}% 38
\BOOKMARK [2][-]{subsection.4.1.1}{Paths}{section.4.1}% 39
\BOOKMARK [2][-]{subsection.4.1.2}{Cycles}{section.4.1}% 40
\BOOKMARK [2][-]{subsection.4.1.3}{Strength of Connections}{section.4.1}% 41
\BOOKMARK [2][-]{subsection.4.1.4}{Articulation Vertex}{section.4.1}% 42
\BOOKMARK [1][-]{section.4.2}{Traversal of Graph: Prim's Algorithm}{chapter.4}% 43
\BOOKMARK [1][-]{section.4.3}{Representations of Graphs: Adjacency Matrices}{chapter.4}% 44
\BOOKMARK [0][-]{chapter.5}{Bit Manipulation}{}% 45
\BOOKMARK [1][-]{section.5.1}{Converting to and from Different Bases}{chapter.5}% 46
\BOOKMARK [2][-]{subsection.5.1.1}{Converting from base 10 \040base 2}{section.5.1}% 47
\BOOKMARK [2][-]{subsection.5.1.2}{Converting from base 2 \040base 16}{section.5.1}% 48
\BOOKMARK [2][-]{subsection.5.1.3}{Converting from base 10 \040base 16 \(and vice versa\)}{section.5.1}% 49
\BOOKMARK [1][-]{section.5.2}{Bitwise Operators}{chapter.5}% 50
\BOOKMARK [2][-]{subsection.5.2.1}{How to print bits of a variable}{section.5.2}% 51
\BOOKMARK [2][-]{subsection.5.2.2}{Altering Bits}{section.5.2}% 52
\BOOKMARK [0][-]{chapter.6}{Sorting and Searching Algorithms}{}% 53
\BOOKMARK [1][-]{section.6.1}{Selection Sort}{chapter.6}% 54
\BOOKMARK [1][-]{section.6.2}{Insertion Sort}{chapter.6}% 55
\BOOKMARK [1][-]{section.6.3}{Bubble Sort}{chapter.6}% 56
\BOOKMARK [1][-]{section.6.4}{Heap Sort}{chapter.6}% 57
\BOOKMARK [1][-]{section.6.5}{Merge Sort}{chapter.6}% 58
\BOOKMARK [1][-]{section.6.6}{Quick Sort}{chapter.6}% 59
\BOOKMARK [1][-]{section.6.7}{Radix Sort}{chapter.6}% 60
